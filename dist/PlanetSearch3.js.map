{"version":3,"sources":["webpack://planetsearch3/./src/gameObjects/planet/Player.ts","webpack://planetsearch3/./src/gameObjects/space/EnemyShip.ts","webpack://planetsearch3/./src/gameObjects/space/Nebula.ts","webpack://planetsearch3/./src/gameObjects/space/Planet.ts","webpack://planetsearch3/./src/gameObjects/space/PlayerShip.ts","webpack://planetsearch3/./src/gameObjects/space/Ship.ts","webpack://planetsearch3/./src/gameObjects/space/SpaceGameObject.ts","webpack://planetsearch3/./src/scenes/EntryScene.ts","webpack://planetsearch3/./src/scenes/planet/PlanetLogicScene.ts","webpack://planetsearch3/./src/scenes/planet/PlanetScene.ts","webpack://planetsearch3/./src/scenes/space/SpaceBackgroundScene.ts","webpack://planetsearch3/./src/scenes/space/SpaceCameraControllerScene.ts","webpack://planetsearch3/./src/scenes/space/SpaceDebugScene.ts","webpack://planetsearch3/./src/scenes/space/SpaceLogicScene.ts","webpack://planetsearch3/./src/scenes/space/SpaceScene.ts","webpack://planetsearch3/./src/scenes/space/SpaceStarScene.ts","webpack://planetsearch3/./src/scenes/space/SpaceUIDebugScene.ts","webpack://planetsearch3/./src/scenes/space/StarSceneControllerScene.ts","webpack://planetsearch3/webpack/bootstrap","webpack://planetsearch3/./src/index.ts"],"names":[],"mappings":"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","file":"./PlanetSearch3.js","sourcesContent":["import GameObject from \"./GameObject\";\r\n\r\nexport default class Player extends Phaser.Physics.Arcade.Sprite\r\n{\r\n    constructor(scene: Phaser.Scene, x: number, y: number)\r\n    {\r\n        super(scene, x, y, \"helix\");\r\n\r\n        scene.add.existing(this);\r\n        scene.physics.add.existing(this);\r\n\r\n        this.setDrag(300, 0).setMaxVelocity(145, 500).setScale(0.5, 1);\r\n\r\n        this.keys = {\r\n            a: scene.input.keyboard.addKey('a'), \r\n            d: scene.input.keyboard.addKey('d'),\r\n            w: scene.input.keyboard.addKey('w'),\r\n            s: scene.input.keyboard.addKey('s'),\r\n            left: scene.input.keyboard.addKey(\"left\"),\r\n            right: scene.input.keyboard.addKey(\"right\"),\r\n            up: scene.input.keyboard.addKey(\"up\"),\r\n            down: scene.input.keyboard.addKey(\"down\"),\r\n        };\r\n\r\n        this.controls = {\r\n            left: () =>\r\n            {\r\n                return this.keys.a.isDown || this.keys.left.isDown;\r\n            },\r\n            right: () =>\r\n            {\r\n                return this.keys.d.isDown || this.keys.right.isDown;\r\n            },\r\n            up: () =>\r\n            {\r\n                return this.keys.w.isDown || this.keys.up.isDown;\r\n            },\r\n            down: () =>\r\n            {\r\n                return this.keys.s.isDown || this.keys.down.isDown;\r\n            }\r\n        };\r\n    }\r\n\r\n    controls: {\r\n        left: Function,\r\n        right: Function,\r\n        up: Function,\r\n        down: Function\r\n    }\r\n    keys: {\r\n        a: Phaser.Input.Keyboard.Key, \r\n        d: Phaser.Input.Keyboard.Key,\r\n        w: Phaser.Input.Keyboard.Key,\r\n        s: Phaser.Input.Keyboard.Key,\r\n        left: Phaser.Input.Keyboard.Key,\r\n        right: Phaser.Input.Keyboard.Key,\r\n        up: Phaser.Input.Keyboard.Key,\r\n        down: Phaser.Input.Keyboard.Key\r\n    }\r\n\r\n    preUpdate(time: number, delta: number)\r\n    {\r\n        const onGround = this.body.blocked.down;\r\n\r\n        if(this.controls.left())\r\n        {\r\n            this.setAccelerationX(-800);\r\n        }\r\n        if(this.controls.right())\r\n        {\r\n            this.setAccelerationX(800);\r\n        }\r\n        if(!this.controls.left() && !this.controls.right())\r\n        {\r\n            this.setAccelerationX(0);\r\n        }\r\n\r\n        if(onGround && this.controls.up())\r\n        {\r\n            this.setVelocityY(-345);\r\n        }\r\n\r\n        if(this.y > this.scene.cameras.main.getBounds().height)\r\n        {\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    dead: boolean;\r\n\r\n    private kill()\r\n    {\r\n        this.dead = true;\r\n        this.destroy();\r\n    }\r\n}","import SpaceScene from \"../../scenes/space/SpaceScene\";\r\nimport Ship from \"./Ship\";\r\n\r\nvar timer = function(start: boolean, interval: number, func: Function, scope?: object, args?: Array<any>)\r\n{\r\n    var startTime = performance.now();\r\n    var called = !start;\r\n\r\n    var update = function()\r\n    {\r\n        // When time is up is call the method\r\n        if(!called && performance.now() - startTime > interval)\r\n        {\r\n            called = true;\r\n            return func.apply(scope, args);\r\n        }\r\n    };\r\n\r\n    var reset = function()\r\n    {\r\n        startTime = performance.now();\r\n        called = false;\r\n    };\r\n\r\n    return {\r\n        update: update,\r\n        reset: reset\r\n    };\r\n};\r\n\r\nexport default class EnemyShip extends Ship\r\n{\r\n    private turnDir: string;\r\n    private turnTimer: {\r\n        update: Function;\r\n        reset: Function;\r\n    };\r\n\r\n    constructor(scene: SpaceScene, x: number, y: number)\r\n    {\r\n        super(scene, x, y, \"enemyShip\");\r\n\r\n        this.turnDir = \"\";\r\n\r\n        this.controls = {\r\n            turnLeft: () =>\r\n            {\r\n                return this.turnDir === \"left\";\r\n            },\r\n            turnRight: () =>\r\n            {\r\n                return this.turnDir === \"right\";\r\n            },\r\n            goForward: () =>\r\n            {\r\n                return true;\r\n            },\r\n            shoot: () => false         \r\n        };\r\n\r\n        this.setScale(2, 2);\r\n        this.angleVel = 3;\r\n        this.speed = 4.5;\r\n\r\n        this.turnTimer = timer(true, 1000, function()\r\n        {\r\n            switch(true)\r\n            {\r\n                case Math.random() <= 0.33:\r\n                    this.turnDir = \"left\";\r\n                    break;\r\n\r\n                case Math.random() < 0.67:\r\n                    this.turnDir = \"right\";\r\n                    break;\r\n\r\n                 case Math.random() <= 1.0:\r\n                    this.turnDir = \"\";\r\n                    break;\r\n            }\r\n\r\n            this.turnTimer.reset();\r\n        }, this);\r\n    }\r\n\r\n    public preUpdate()\r\n    {\r\n        Ship.prototype.preUpdate.apply(this, arguments);\r\n\r\n        this.turnTimer.update();\r\n    }\r\n}","import SpaceImg from \"./SpaceGameObject\";\r\n\r\nexport default class Nebula extends SpaceImg\r\n{\r\n    constructor(scene: Phaser.Scene, x: number, y: number, texture: string)\r\n    {\r\n        super(scene, x, y, texture);\r\n    }\r\n}","import SpaceGameObject from \"./SpaceGameObject\";\r\n\r\nexport default class Planet extends SpaceGameObject\r\n{\r\n    constructor(scene: Phaser.Scene, x: number, y: number, texture: string)\r\n    {\r\n        super(scene, x, y, texture);\r\n    }\r\n\r\n    public preUpdate()\r\n    {\r\n        this.bodyConf.update();\r\n    }\r\n\r\n    public onCollide(object: SpaceGameObject)\r\n    {\r\n        if(object._arrayName === \"playerShip\")\r\n        {\r\n        }\r\n        console.log(\"hit!\");\r\n    }\r\n}","import SpaceScene from \"../../scenes/space/SpaceScene\";\r\nimport Ship from \"./Ship\";\r\n\r\nexport default class PlayerShip extends Ship\r\n{\r\n    constructor (scene: SpaceScene, x: number, y: number)\r\n    {\r\n        super(scene, x, y, \"playerShip\");\r\n\r\n        this.keys = {\r\n            a: scene.input.keyboard.addKey('a'), \r\n            d: scene.input.keyboard.addKey('d'),\r\n            w: scene.input.keyboard.addKey('w'),\r\n            s: scene.input.keyboard.addKey('s')\r\n        };\r\n\r\n        this.controls = {\r\n            turnLeft: () =>\r\n            {\r\n                return this.keys.a.isDown;\r\n            },\r\n            turnRight: () =>\r\n            {\r\n                return this.keys.d.isDown;\r\n            },\r\n            goForward: () =>\r\n            {\r\n                return this.keys.w.isDown;\r\n            },\r\n            shoot: () => false         \r\n        };\r\n\r\n        this.setScale(2, 2);\r\n        this.angleVel = 3;\r\n        this.speed = 6;\r\n    }\r\n\r\n    public keys: any;\r\n   \r\n    public preUpdate()\r\n    {\r\n        Ship.prototype.preUpdate.apply(this, arguments);\r\n    }\r\n}","import SpaceGameObject from \"./SpaceGameObject\";\r\n\r\nexport default class Ship extends SpaceGameObject\r\n{\r\n    constructor(scene: Phaser.Scene, x: number, y: number, texture: string)\r\n    {\r\n        super(scene, x, y, texture);\r\n    }\r\n\r\n    protected controls: {\r\n        turnLeft: () => boolean;\r\n        turnRight: () => boolean;\r\n        goForward: () => boolean;\r\n        shoot: () => boolean;\r\n    }\r\n\r\n    protected angleVel: number;\r\n    protected speed: number;\r\n\r\n    public preUpdate()\r\n    {\r\n        if(this.controls.turnLeft())\r\n        {\r\n            this.setAngle(this.angle - this.angleVel);\r\n        }     \r\n        if(this.controls.turnRight())\r\n        {\r\n            this.setAngle(this.angle + this.angleVel);\r\n        }\r\n\r\n        if(this.controls.goForward())\r\n        {\r\n            let angle = Phaser.Math.DEG_TO_RAD * (this.angle - 90);\r\n            this.x += Math.cos(angle) * this.speed;\r\n            this.y += Math.sin(angle) * this.speed;\r\n        }\r\n\r\n        this.bodyConf.update();\r\n    }\r\n}","export default class SpaceGameObject extends Phaser.GameObjects.Sprite\r\n{\r\n    constructor (scene: Phaser.Scene, x: number, y: number, texture: string, frame?: string | number)\r\n    {\r\n        super(scene, x, y, texture, frame);\r\n\r\n        scene.add.existing(this);\r\n\r\n        let _this: this = this;\r\n\r\n        this.bodyConf = {\r\n            moves: true,\r\n            boundingBox: {},\r\n            update: function() {},\r\n            destroy: function() {}\r\n        };\r\n        this.bodyConf.updateBoundingBox = function()\r\n        {\r\n            this.boundingBox.minX = _this.x - _this.displayWidth / 2;\r\n            this.boundingBox.minY = _this.y - _this.displayHeight / 2;\r\n            this.boundingBox.maxX = _this.x + _this.displayWidth / 2;\r\n            this.boundingBox.maxY = _this.y + _this.displayHeight / 2;\r\n        };\r\n\r\n        this.bodyConf.updateBoundingBox();\r\n    }\r\n\r\n    body: any;\r\n    bodyConf: any;\r\n    _arrayName: string;\r\n    _name: string;\r\n}","import PlanetScene from \"./planet/PlanetScene\";\r\nimport SpaceScene from \"./space/SpaceScene\";\r\n\r\n// The entry scene / entry scene point will handle save data and switching between scenes\r\nexport default class EntryScene extends Phaser.Scene\r\n{\r\n    constructor()\r\n    {\r\n        super(\"entry\");\r\n    }\r\n\r\n    private currentSceneGroup: string;\r\n    \r\n    public preload()\r\n    {\r\n        this.currentSceneGroup = \"space\";\r\n    }\r\n\r\n    public create()\r\n    {   \r\n        this.scene.run(this.currentSceneGroup);\r\n    }\r\n\r\n    public switchSceneGroup(sceneGroup: string, callback?: Function, callbackScope?: object)\r\n    {\r\n        if(sceneGroup === this.currentSceneGroup)\r\n        {\r\n            throw `You are already in \"${sceneGroup}\" scene group`;\r\n        }\r\n\r\n        this.scene.sleep(this.currentSceneGroup);\r\n        (this.scene.get(this.currentSceneGroup) as (PlanetScene | SpaceScene)).sleepScenes(true);\r\n\r\n        if(callback !== undefined)\r\n        {\r\n            callback.apply(callbackScope, [this.scene.get(this.currentSceneGroup), this.scene.get(sceneGroup)]);\r\n        }\r\n\r\n        this.scene.run(sceneGroup);\r\n\r\n        var nextScene = (this.scene.get(sceneGroup) as (PlanetScene | SpaceScene));\r\n        if(nextScene.loaded)\r\n        {\r\n            nextScene.runScenes(true);\r\n        }\r\n        \r\n        this.currentSceneGroup = sceneGroup;\r\n    }\r\n}","//@ts-nocheck\r\nimport Player from \"../../gameObjects/planet/Player\";\r\n\r\nexport default class PlanetLogicScene extends Phaser.Scene\r\n{\r\n    constructor()\r\n    {\r\n        super({\r\n            key: \"planetLogic\",\r\n            physics: {\r\n                default: \"arcade\",\r\n                arcade: {\r\n                    gravity: { y: 800 } \r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    player: Player\r\n\r\n    public preload()\r\n    {\r\n        this.load.image(\"IcyDwarfTileset\", \"./assets/Planet/Levels/IcyDwarf/Tilesets/IcyDwarfTileset.png\");\r\n        this.load.tilemapTiledJSON(\"IcyDwarfTilemap\", \"./assets/Planet/Levels/IcyDwarf/Tilemaps/IcyDwarfTilemap.json\");\r\n    }\r\n\r\n\r\n    private planetName: string;\r\n    private levelName: string;\r\n\r\n    private levelAssetsPrefix: string = \"IcyDwarf\";\r\n\r\n    public receiveLevelInfo(passObj: object)\r\n    {\r\n        switch(passObj.type)\r\n        {\r\n            case \"planet\":\r\n                var planet = passObj.from;\r\n                this.levelAssetsPrefix = this.planetName = planet.texture.key.replace(\"Planet\", \"\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    public create()\r\n    {\r\n        const tilemap = this.make.tilemap({ key: this.levelAssetsPrefix + \"Tilemap\", tileWidth: 16, tileHeight: 16 });\r\n        const tileset = tilemap.addTilesetImage( this.levelAssetsPrefix + \"Tileset\");\r\n        const worldLayer = tilemap.createStaticLayer(\"World\", tileset, 0, 0);\r\n\r\n        worldLayer.setCollisionByProperty({ collides: true });\r\n\r\n        // var debugGraphics = this.add.graphics().setAlpha(0.75);\r\n\r\n        // worldLayer.renderDebug(debugGraphics, {\r\n        //     tileColor: null, // Color of non-colliding tiles\r\n        //     collidingTileColor: new Phaser.Display.Color(243, 134, 48, 255), // Color of colliding tiles\r\n        //     faceColor: new Phaser.Display.Color(40, 39, 37, 255) // Color of colliding face edges\r\n        // });\r\n\r\n        const spawnPoint = tilemap.findObject(\"Objects\", obj => obj.name === \"Spawn Point\");\r\n\r\n        this.player = new Player(this, spawnPoint.x, spawnPoint.y);\r\n\r\n        this.physics.add.collider(this.player, worldLayer);\r\n\r\n        // Camera stuff\r\n        var cam = this.cameras.main;\r\n        cam.startFollow(this.player);\r\n        cam.setZoom(2);\r\n        cam.setBounds(0, 0, tilemap.widthInPixels, tilemap.heightInPixels);\r\n    }\r\n\r\n    public update()\r\n    {\r\n        if(this.player.dead)\r\n        {\r\n            this.scene.restart();\r\n        }\r\n    }\r\n}","import EntryScene from \"../EntryScene\";\r\nimport ISceneGroupHead from \"../ISceneGroupHead\";\r\nimport PlanetLogicScene from \"./PlanetLogicScene\";\r\n\r\nexport default class PlanetScene extends Phaser.Scene implements ISceneGroupHead\r\n{\r\n    constructor()\r\n    {\r\n        super(\"planet\");\r\n    }\r\n\r\n    public receiveInfo(levelInfo: object)\r\n    {\r\n        (this.scene.get(\"planetLogic\") as PlanetLogicScene).receiveLevelInfo(levelInfo);\r\n    }\r\n    \r\n    public preload()\r\n    {\r\n        \r\n    }\r\n    \r\n    public loaded: boolean = false;\r\n    \r\n    public create()\r\n    {\r\n        this.spaceBar = this.input.keyboard.addKey(\"Space\");\r\n        \r\n        this.runScenes();\r\n        this.loaded = true;\r\n    }\r\n    \r\n    spaceBar: Phaser.Input.Keyboard.Key;\r\n\r\n    public update()\r\n    {\r\n        if(this.spaceBar.isDown)\r\n        {\r\n            this.switchToSpaceSceneGroup();\r\n        }\r\n    }\r\n\r\n    public sleepScenes(calledByEntryScene?: boolean) \r\n    {\r\n        this.scene.sleep(\"planetLogic\");\r\n    }\r\n    public runScenes(calledByEntryScene?: boolean) \r\n    {\r\n        this.scene.run(\"planetLogic\");\r\n    }\r\n\r\n    public switchToSpaceSceneGroup()\r\n    {\r\n        var entryScene: EntryScene = this.scene.get(\"entry\") as EntryScene;\r\n\r\n        this.spaceBar.reset();\r\n        entryScene.switchSceneGroup(\"space\");\r\n    }\r\n}","export default class SpaceBackgroundScene extends Phaser.Scene \r\n{\r\n    constructor()\r\n    {\r\n        super(\"spaceBackground\");\r\n    }\r\n\r\n    private background: Phaser.GameObjects.Graphics;\r\n\r\n    public preload()\r\n    {\r\n\r\n    }\r\n\r\n    public create()\r\n    {\r\n        this.background = this.add.graphics();\r\n\r\n        const screenWidth: number = this.game.config.width as number;\r\n        const screenHeight: number = this.game.config.height as number;\r\n\r\n        this.background.fillStyle(0x000022);\r\n        this.background.fillRect(0, 0, screenWidth, screenHeight);\r\n    }\r\n}","import SpaceScene from \"./SpaceScene\";\r\nimport SpaceDebugScene from \"./SpaceDebugScene\";\r\n\r\nexport default class SpaceCameraControllerScene extends Phaser.Scene\r\n{\r\n    constructor()\r\n    {\r\n        super(\"spaceCameraController\");\r\n    }\r\n\r\n    private spaceScene: SpaceScene;\r\n    private spaceDebugScene: SpaceDebugScene;\r\n    private keys: {\r\n        rotateLeft: Phaser.Input.Keyboard.Key,\r\n        rotateRight: Phaser.Input.Keyboard.Key,\r\n        rotateReset: Phaser.Input.Keyboard.Key\r\n    };\r\n    private camAngle: number;\r\n    private angleSpeed: number;\r\n\r\n    public create()\r\n    {\r\n        this.spaceScene = this.scene.get(\"space\") as SpaceScene;\r\n        this.spaceDebugScene = this.scene.get(\"spaceDebug\") as SpaceDebugScene;\r\n\r\n        this.input.on('wheel', (pointer: Phaser.Input.Pointer, currentlyOver: any, dx: number, dy: number, dz: number) =>\r\n        { \r\n            var cam = this.cameras.main;\r\n\r\n            this.updateZoom(Math.min(Math.max(cam.zoom - dy * 0.001, 0.3), 1.5));\r\n\r\n        });\r\n\r\n        this.keys = {\r\n            rotateLeft: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT),\r\n            rotateRight: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT),\r\n            rotateReset: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ZERO)\r\n        };\r\n\r\n        this.camAngle = 0;\r\n        this.angleSpeed = 2;\r\n\r\n        this.updateZoom(1);\r\n    }\r\n\r\n    public getCamAngle(): number\r\n    {\r\n        return this.camAngle;\r\n    }\r\n   \r\n    public getCameraAngle(): number\r\n    {\r\n        return this.camAngle;\r\n    }\r\n\r\n    public updateZoom(zoom: number)\r\n    {\r\n        var cam = this.cameras.main;\r\n\r\n        cam.setZoom(zoom);\r\n\r\n        this.spaceScene.cameras.main.setZoom(cam.zoom);\r\n        this.spaceDebugScene.cameras.main.setZoom(cam.zoom);\r\n\r\n        cam.roundPixels = true;\r\n        this.spaceDebugScene.cameras.main.setRoundPixels(true);\r\n\r\n        this.resizeCSPCameraWindow();\r\n    }\r\n\r\n    private adjustCameraAngle(angle: number)\r\n    {\r\n        this.cameras.main.setAngle(angle);\r\n\r\n        this.spaceScene.cameras.main.setAngle(angle);\r\n        this.spaceDebugScene.cameras.main.setAngle(angle);\r\n\r\n        this.resizeCSPCameraWindow();\r\n    }\r\n\r\n    public update ()\r\n    {\r\n        var cam = this.cameras.main;\r\n\r\n        var cameraTarget: { x: number, y: number } = this.spaceScene.getCameraTarget();\r\n        cam.setScroll(cameraTarget.x - cam.width / 2, cameraTarget.y - cam.height / 2);\r\n        this.spaceDebugScene.cameras.main.setScroll(cam.scrollX, cam.scrollY);\r\n\r\n        if(this.keys.rotateLeft.isDown)\r\n        {\r\n            this.camAngle -= this.angleSpeed;\r\n            this.adjustCameraAngle(this.camAngle);\r\n        }\r\n        if(this.keys.rotateRight.isDown)\r\n        {\r\n            this.camAngle += this.angleSpeed;\r\n            this.adjustCameraAngle(this.camAngle);\r\n        }\r\n        if(this.keys.rotateReset.isDown)\r\n        {\r\n            this.camAngle = 0;\r\n            this.adjustCameraAngle(this.camAngle);\r\n\r\n            this.updateZoom(1);\r\n        }\r\n    }\r\n\r\n    private resizeCSPCameraWindow ()\r\n    {\r\n        const world: any = this.spaceScene.csp.world;\r\n        const cspConfig = this.spaceScene.cspConfig;\r\n        const cam = this.cameras.main;\r\n\r\n        var c_width = cspConfig.window.width;\r\n        var c_height = cspConfig.window.height;\r\n\r\n        // if(cam.zoom > 1)\r\n        // {\r\n        //     return world.camera.setWindow(\r\n        //         0,\r\n        //         0,\r\n        //         c_width,\r\n        //         c_height\r\n        //     );\r\n        // }\r\n\r\n        var x = Math.abs(c_width - c_width / cam.zoom) / -2;\r\n        var y = Math.abs(c_height - c_height / cam.zoom) / -2;\r\n        var width = c_width / cam.zoom + x * -2;\r\n        var height = c_height / cam.zoom + y * -2;\r\n\r\n        var prev_width: number = Math.abs(x) + width;\r\n        var prev_height: number = Math.abs(y) + height;\r\n        var prev_halfWidth = prev_width / 2;\r\n        var prev_halfHeight = prev_height / 2;\r\n\r\n        let reuseHyp = Math.sqrt(Math.pow(prev_halfWidth, 2) + Math.pow(prev_halfHeight, 2));\r\n\r\n        let startingAngle = Math.atan2(prev_halfHeight, prev_halfWidth) + this.camAngle * Phaser.Math.DEG_TO_RAD;\r\n\r\n        let upperLeft: any = {};\r\n        let lowerLeft: any = {};\r\n        let upperRight: any = {};\r\n        let lowerRight: any = {};\r\n\r\n        upperLeft.angle = startingAngle + Math.PI * 1.5;\r\n        upperLeft.x = Math.cos(upperLeft.angle) * reuseHyp;\r\n        upperLeft.y = Math.sin(upperLeft.angle) * reuseHyp;\r\n\r\n        lowerLeft.angle = startingAngle + Math.PI;\r\n        lowerLeft.x = Math.cos(lowerLeft.angle) * reuseHyp;\r\n        lowerLeft.y = Math.sin(lowerLeft.angle) * reuseHyp;\r\n\r\n        upperRight.angle = startingAngle;\r\n        upperRight.x = Math.cos(upperRight.angle) * reuseHyp;\r\n        upperRight.y = Math.sin(upperRight.angle) * reuseHyp;\r\n\r\n        lowerRight.angle = startingAngle + Math.PI / 2;\r\n        lowerRight.x = Math.cos(lowerRight.angle) * reuseHyp;\r\n        lowerRight.y = Math.sin(lowerRight.angle) * reuseHyp;\r\n\r\n        var minX = Math.min(upperLeft.x, lowerLeft.x, upperRight.x, lowerRight.x);\r\n        var maxX = Math.max(upperLeft.x, lowerLeft.x, upperRight.x, lowerRight.x);\r\n        var minY = Math.min(upperLeft.y, lowerLeft.y, upperRight.y, lowerRight.y);\r\n        var maxY = Math.max(upperLeft.y, lowerLeft.y, upperRight.y, lowerRight.y);\r\n\r\n        minX -= Math.abs(x);\r\n        maxX -= Math.abs(x);\r\n        minY -= Math.abs(y);\r\n        maxY -= Math.abs(y);\r\n\r\n        x = minX / 2;\r\n        y = minY / 2;\r\n        width = maxX - minX;\r\n        height = maxY - minY;\r\n\r\n        // Set window\r\n        world.camera.setWindow(\r\n            x,\r\n            y,\r\n            width,\r\n            height\r\n        );\r\n    }\r\n}","import SpaceScene from \"./SpaceScene\";\r\n\r\nexport default class SpaceDebugScene extends Phaser.Scene\r\n{\r\n    constructor()\r\n    {\r\n        super(\"spaceDebug\");\r\n    }\r\n\r\n    private cellGraphics: Phaser.GameObjects.Graphics; \r\n\r\n    public create()\r\n    {\r\n        this.cellGraphics = this.add.graphics();\r\n    }\r\n    private cameraLineGraphics: Phaser.GameObjects.Graphics;\r\n\r\n    public update(time: number, delta: number)\r\n    {\r\n        this.showGrid();\r\n    }\r\n\r\n    private showGrid()\r\n    {\r\n        var spaceScene: SpaceScene = this.scene.get(\"space\") as SpaceScene;\r\n\r\n        this.cellGraphics.clear();\r\n\r\n        this.cellGraphics.lineStyle(2, 0x549431, 1.0);\r\n        let cellWidth: number = spaceScene.csp.world.cameraGrid.cellWidth;\r\n        let cellHeight: number = spaceScene.csp.world.cameraGrid.cellHeight;\r\n\r\n        spaceScene.csp.world.loopThroughVisibleCells((cell: object, col: number, row: number) =>\r\n        {\r\n            this.cellGraphics.strokeRect(col * cellWidth, row * cellHeight, cellWidth, cellHeight);\r\n        });\r\n    }\r\n}","import SpaceScene from \"./SpaceScene\";\r\nimport SpaceGameObject from \"../../gameObjects/space/SpaceGameObject\";\r\nimport PlayerShip from \"../../gameObjects/space/PlayerShip\";\r\nimport Planet from \"../../gameObjects/space/Planet\";\r\nimport EnemyShip from \"../../gameObjects/space/EnemyShip\";\r\nimport Nebula from \"../../gameObjects/space/Nebula\";\r\n\r\nexport default class SpaceLogicScene extends Phaser.Scene\r\n{\r\n    constructor()\r\n    {\r\n        super(\"spaceLogic\");\r\n    }\r\n\r\n    spaceScene: SpaceScene;\r\n    playerShip: PlayerShip;\r\n\r\n    public addObjectsToSpace()\r\n    {\r\n        this.spaceScene = this.scene.get(\"space\") as SpaceScene;\r\n\r\n        var world: any = this.spaceScene.csp.world;\r\n\r\n        \r\n        var nebulae = world.add.gameObjectArray(Nebula);\r\n\r\n        var gridConfig = this.spaceScene.cspConfig.grid;\r\n        var placeWidth = gridConfig.cols * gridConfig.cellWidth;\r\n        var placeHeight = gridConfig.rows * gridConfig.cellHeight;\r\n                                                                \r\n        var nebulaeAmt = Math.floor((placeWidth * placeHeight) / 12000000);\r\n        \r\n        var rng = new Phaser.Math.RandomDataGenerator(\"rand1\");\r\n\r\n        for(var i = 0; i < nebulaeAmt; i++)\r\n        {\r\n            nebulae.add(this.spaceScene, placeWidth * rng.frac(), placeHeight * rng.frac(), \"grayNebula\").setScale(13, 13);\r\n        }\r\n        \r\n        var planets = world.add.gameObjectArray(Planet);\r\n        planets.add(this.spaceScene, 69000, 60000, \"IcyDwarfPlanet\").setScale(13, 13);\r\n        planets.add(this.spaceScene, 56000, 70000, \"RedDustPlanet\").setScale(13, 13);\r\n\r\n        var enemyShips = world.add.gameObjectArray(EnemyShip);\r\n        enemyShips.add(this.spaceScene, 67000, 60000);\r\n        enemyShips.add(this.spaceScene, 70000, 60000);\r\n\r\n        this.playerShip = world.add.gameObjectArray(PlayerShip).add(this.spaceScene, 69000, 60000 + 1000);\r\n        this.spaceScene.setCameraTarget(this.playerShip);\r\n    }\r\n\r\n    public update()\r\n    {\r\n        this.updatePlanets();\r\n    }\r\n\r\n    private updatePlanets()\r\n    {\r\n        let playerShip = this.playerShip;\r\n\r\n        this.spaceScene.sys.displayList.list.forEach((object: SpaceGameObject) =>\r\n        {\r\n            if(object._arrayName === \"planet\")\r\n            {\r\n                var planet = object;\r\n\r\n                var dx = planet.x - playerShip.x;\r\n                var dy = planet.y - playerShip.y;\r\n\r\n                if(dx * dx + dy * dy < Math.pow(planet.displayWidth / 2, 2))\r\n                {\r\n                    this.spaceScene.switchToPlanetSceneGroup({\r\n                        type: \"planet\",\r\n                        from: planet\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n}","import Planet from \"../../gameObjects/space/Planet\";\r\nimport PlayerShip from \"../../gameObjects/space/PlayerShip\";\r\nimport SpaceGameObject from \"../../gameObjects/space/SpaceGameObject\";\r\nimport EntryScene from \"../EntryScene\";\r\nimport ISceneGroupHead from \"../ISceneGroupHead\";\r\nimport PlanetScene from \"../planet/PlanetScene\";\r\nimport SpaceLogicScene from \"./SpaceLogicScene\";\r\n\r\nexport default class SpaceScene extends Phaser.Scene implements ISceneGroupHead\r\n{\r\n    constructor()\r\n    {\r\n        super(\"space\");\r\n    }\r\n\r\n    public preload()\r\n    {\r\n        this.load.image(\"playerShip\", \"./assets/Space/Ships/playerShip.png\");\r\n        this.load.image(\"enemyShip\", \"./assets/Space/Ships/enemyShip.png\");\r\n        this.load.image(\"IcyDwarfPlanet\", \"./assets/Space/Planets/IcyDwarfPlanet.png\");\r\n        this.load.image(\"RedDustPlanet\", \"./assets/Space/Planets/RedDustPlanet.png\");\r\n        this.load.image(\"grayNebula\", \"./assets/Space/nebula/grayNebula.png\");\r\n        this.load.image(\"blueStar0\", \"./assets/Space/Stars/blueStar0.png\");\r\n\r\n        this.load.scenePlugin({\r\n            key: \"CartesianSystemPlugin\",\r\n            url: \"./libraries/CartesianSystemPlugin.js\",\r\n            sceneKey: 'csp'\r\n        });\r\n    }\r\n\r\n    public cspConfig: any;\r\n    public loaded: boolean = false;\r\n\r\n    public quickLoad: boolean = true;\r\n\r\n    public create()\r\n    {\r\n        this.cspConfig = {\r\n            window: {\r\n                width: this.game.config.width,\r\n                height: this.game.config.height\r\n            },\r\n            grid: {\r\n                cols: 200,\r\n                rows: 200,\r\n                cellWidth: 800,\r\n                cellHeight: 800\r\n            }\r\n        };\r\n\r\n        this.csp.initWorld(this.cspConfig);\r\n        (this.scene.get(\"spaceLogic\") as SpaceLogicScene).addObjectsToSpace();\r\n        this.csp.syncWithGrid();\r\n        this.runScenes(false);\r\n        this.loaded = true;\r\n    }\r\n\r\n    playerShip: PlayerShip;   \r\n\r\n    public runScenes(calledByEntryScene?: boolean)\r\n    {\r\n        // this.scene.run(\"spaceBackground\");\r\n        this.scene.run(\"spaceLogic\");\r\n        this.scene.run(\"spaceCameraController\");\r\n        this.scene.run(\"starSceneController\");\r\n        this.runDebugScenes();\r\n\r\n        if(calledByEntryScene)\r\n        {\r\n            var playerShip = (this.scene.get(\"spaceLogic\") as SpaceLogicScene).playerShip;\r\n            playerShip.y += 500;\r\n            for(var i in playerShip.keys)\r\n            {\r\n                playerShip.keys[i].reset();\r\n            }\r\n        }\r\n    }\r\n\r\n    private runDebugScenes()\r\n    {\r\n        this.scene.run(\"spaceDebug\");\r\n        this.scene.run(\"spaceUIDebug\");\r\n\r\n        this.scene.sleep(\"spaceDebug\");\r\n \r\n        this.input.keyboard.on(\"keydown-U\", () =>\r\n        {\r\n            if(this.scene.isSleeping(\"spaceUIDebug\"))\r\n            {\r\n                this.scene.wake(\"spaceUIDebug\");\r\n            }\r\n            else\r\n            {\r\n                this.scene.sleep(\"spaceUIDebug\");\r\n            }\r\n        });\r\n        this.input.keyboard.on(\"keydown-I\", () =>\r\n        {\r\n            if(this.scene.isSleeping(\"spaceDebug\"))\r\n            {\r\n                this.scene.wake(\"spaceDebug\");\r\n            }\r\n            else\r\n            {\r\n                this.scene.sleep(\"spaceDebug\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public sleepScenes(calledByEntryScene?: boolean)\r\n    {\r\n        this.scene.sleep(\"spaceBackground\");\r\n        this.scene.sleep(\"spaceLogic\");\r\n        this.scene.sleep(\"spaceCameraController\");\r\n        this.scene.sleep(\"spaceDebug\");\r\n        this.scene.sleep(\"spaceUIDebug\");\r\n        this.scene.sleep(\"starSceneController\");\r\n    }\r\n\r\n    public switchToPlanetSceneGroup(levelInfo: object)\r\n    {\r\n        var entryScene: EntryScene = this.scene.get(\"entry\") as EntryScene;\r\n\r\n        entryScene.switchSceneGroup(\"planet\", (fromScene: SpaceScene, nextScene: PlanetScene) =>\r\n        {\r\n            nextScene.receiveInfo(levelInfo);\r\n        });\r\n    }\r\n\r\n    private cameraTarget: { x: number; y: number; };\r\n\r\n    public setCameraTarget(cameraTarget: object)\r\n    {\r\n        this.cameraTarget = cameraTarget as { x: number; y: number; };\r\n        this.cameras.main.startFollow(this.cameraTarget);\r\n    }\r\n\r\n    public getCameraTarget()\r\n    {\r\n        return this.cameraTarget;\r\n    }\r\n\r\n    public csp: any;\r\n\r\n    public update(time: number, delta: number)\r\n    {\r\n        var playerShip = (this.scene.get(\"spaceLogic\") as SpaceLogicScene).playerShip;\r\n\r\n        this.csp.setFollow(playerShip.x, playerShip.y);\r\n        this.csp.updateWorld();\r\n    }\r\n}","import SpaceCameraControllerScene from \"./SpaceCameraControllerScene\";\r\nimport SpaceScene from \"./SpaceScene\";\r\n\r\nexport default class SpaceStarScene extends Phaser.Scene\r\n{\r\n    private starsPerCell: number;\r\n    private starSize: number;\r\n    private starScroll: number;\r\n    private csStars: any;\r\n\r\n    public preload()\r\n    {\r\n        this.load.scenePlugin({\r\n            key: \"CartesianSystemPlugin\",\r\n            url: \"./libraries/CartesianSystemPlugin.js\",\r\n            sceneKey: 'csStars'\r\n        });\r\n\r\n        this.load.spritesheet(\"starSheet1\" + this.scene.key, \"./assets/Space/Stars/Stars.png\", \r\n        {\r\n            frameWidth: 12,\r\n            frameHeight: 12\r\n        });\r\n    }\r\n\r\n    private spaceScene: SpaceScene;\r\n    private spaceCameraControllerScene: SpaceCameraControllerScene;\r\n    private subScrollX: number;\r\n    private subScrollY: number;\r\n    // private stars: Phaser.GameObjects.Graphics;\r\n\r\n    public create(data: { starsPerCell: number, starSize: number, starScroll: number })\r\n    {\r\n        this.starsPerCell = data.starsPerCell;\r\n        this.starSize = data.starSize;\r\n        this.starScroll = (!data.starScroll || data.starScroll <= 0) ? 1 : data.starScroll;\r\n\r\n        this.spaceScene = this.scene.get(\"space\") as SpaceScene;\r\n        this.spaceCameraControllerScene = this.scene.get(\"spaceCameraController\") as SpaceCameraControllerScene;\r\n        this.csStars.initWorld(this.spaceScene.cspConfig);\r\n\r\n        // this.stars = this.add.graphics();\r\n\r\n        var bounds = this.csStars.world.bounds;\r\n        var width = bounds.maxX - bounds.minX;\r\n        var height = bounds.maxY - bounds.minY;\r\n\r\n        this.subScrollX = (width - width / this.starScroll) * this.starScroll;\r\n        this.subScrollY = (height - height / this.starScroll) * this.starScroll;\r\n\r\n        this.star0 = this.add.image(0, 0, \"starSheet1\" + this.scene.key, 0);\r\n        this.blueStar0 = this.add.image(0, 0, \"blueStar0\").setScrollFactor(0);\r\n\r\n        const screenWidth: number = this.game.config.width as number;\r\n        const screenHeight: number = this.game.config.height as number;\r\n\r\n        this.rt = this.add.renderTexture(0, 0, screenWidth, screenHeight).setOrigin(0.5, 0.5).setScale(2);\r\n        this.rt.setScrollFactor(0);\r\n    }\r\n\r\n    private star0: Phaser.GameObjects.Image;\r\n    private blueStar0: Phaser.GameObjects.Image;\r\n\r\n    rt: Phaser.GameObjects.RenderTexture;\r\n\r\n    public update()\r\n    {  \r\n        var mainCam = this.spaceCameraControllerScene.cameras.main;\r\n        var w = mainCam.width / 2;\r\n        var h = mainCam.height / 2;\r\n\r\n        var scrollX = mainCam.scrollX * this.starScroll - this.subScrollX - (w - w * this.starScroll);\r\n        var scrollY = mainCam.scrollY * this.starScroll - this.subScrollY - (h - h * this.starScroll);\r\n\r\n        var cam = this.cameras.main;\r\n\r\n        cam.setScroll(scrollX, scrollY);\r\n        cam.setZoom(mainCam.zoom);\r\n        cam.setRoundPixels(true);\r\n        cam.setAngle(this.spaceCameraControllerScene.getCameraAngle());\r\n\r\n        var world = this.spaceScene.csp.world;\r\n        this.csStars.world.camera.setWindow(\r\n            world.camera.x, world.camera.y, world.camera.width + Math.floor(world.camera.width / mainCam.zoom), world.camera.height + Math.floor(world.camera.height / mainCam.zoom)\r\n        );\r\n\r\n        var follow: { x: number, y: number } = this.spaceScene.getCameraTarget();\r\n\r\n        this.csStars.setFollow(\r\n            follow.x * this.starScroll - this.subScrollX,  \r\n            follow.y * this.starScroll - this.subScrollY\r\n        );\r\n        this.csStars.updateWorld();\r\n\r\n        this.sys.displayList.add(this.rt);\r\n        this.renderStars();\r\n    }\r\n\r\n    private renderStars()\r\n    {\r\n        // var stars: Phaser.GameObjects.Graphics = this.stars; \r\n\r\n        // stars.clear();\r\n        // stars.fillStyle(0xFFFFFF); \r\n        \r\n        // Dead code:\r\n        let world: any = this.csStars.world;\r\n\r\n        let cellWidth: number = world.cameraGrid.cellWidth;\r\n        let cellHeight: number = world.cameraGrid.cellHeight;\r\n\r\n        var mainCam: Phaser.Cameras.Scene2D.Camera = this.cameras.main;\r\n        let mainWorld = this.spaceScene.csp.world;\r\n        var cspConfig = this.spaceScene.cspConfig;\r\n\r\n        this.rt.clear();\r\n\r\n        this.rt.beginDraw();\r\n\r\n            world.loopThroughVisibleCells((cell: object, col: number, row: number) =>\r\n            {\r\n                var rng = new Phaser.Math.RandomDataGenerator([(col + row).toString()]);\r\n\r\n                for(var i = 0; i < 22; i++)\r\n                {\r\n                    this.rt.batchDraw(\r\n                        this.star0, \r\n                        col * cellWidth - mainCam.scrollX + cellWidth * rng.frac(),\r\n                        row * cellHeight - mainCam.scrollY + cellHeight * rng.frac()\r\n                    );\r\n                }\r\n            });\r\n\r\n        this.rt.endDraw();\r\n\r\n\r\n    }\r\n}","import SpaceScene from \"./SpaceScene\";\r\nimport PlayerShip from \"../../gameObjects/space/PlayerShip\";\r\nimport SpaceCameraControllerScene from \"./SpaceCameraControllerScene\";\r\n\r\nexport default class SpaceUIDebugScene extends Phaser.Scene\r\n{\r\n    constructor()\r\n    {\r\n        super(\"spaceUIDebug\");\r\n    }\r\n\r\n    private cellCoorText: Phaser.GameObjects.Text;\r\n    private cellText: Phaser.GameObjects.Text;\r\n    private fpsText: Phaser.GameObjects.Text;\r\n    private shipPositionText: Phaser.GameObjects.Text;\r\n    private spaceScene: SpaceScene;\r\n\r\n    public create()\r\n    {\r\n        this.cellCoorText = this.add.text(40, 260, \"\");\r\n        this.cellText = this.add.text(40, 274, \"\");\r\n        this.fpsText = this.add.text(40, 20, \"\");\r\n        this.shipPositionText = this.add.text(550, 20, \"\");\r\n\r\n        this.spaceScene = this.scene.get(\"space\") as SpaceScene;\r\n    }\r\n\r\n    public update(time: number, delta: number)\r\n    {\r\n        this.fpsText.setText(\"Fps: \" + (1000 / delta).toFixed(0));\r\n\r\n        var cameraTarget: { x: number, y: number } = this.spaceScene.getCameraTarget();\r\n        this.shipPositionText.setText(`(${cameraTarget.x.toFixed(2)}, ${cameraTarget.y.toFixed(2)})`);\r\n\r\n        this.peekCell();\r\n    }\r\n\r\n    mouseToWorldCoordinates: object;\r\n\r\n    private peekCell()\r\n    {\r\n        var cspWorld: any = this.spaceScene.csp.world;\r\n\r\n        var coordinates: { col: number, row: number } = cspWorld.cameraGrid.getCoordinates(\r\n            cspWorld.camera.scrollX - cspWorld.camera.halfWidth + this.input.activePointer.x / this.spaceScene.cameras.main.zoom, \r\n            cspWorld.camera.scrollY - cspWorld.camera.halfHeight + this.input.activePointer.y / this.spaceScene.cameras.main.zoom\r\n        );\r\n\r\n        var cell: any = cspWorld.cameraGrid.grid[coordinates.col][coordinates.row];\r\n\r\n        this.cellCoorText.setText(`(${coordinates.col}, ${coordinates.row})`);\r\n\r\n        var txt: string = \"\";\r\n        for(var i in cell)\r\n        {\r\n            txt += i;\r\n        }\r\n\r\n        this.cellText.setText(txt);\r\n    }\r\n}","import SpaceStarScene from \"./SpaceStarScene\";\r\n\r\nexport default class StarSceneControllerScene extends Phaser.Scene\r\n{\r\n    constructor()\r\n    {\r\n        super(\"starSceneController\");\r\n    }\r\n\r\n    starScenesSleeping: boolean;\r\n\r\n    public create()\r\n    {\r\n        this.startStarScenes();\r\n        this.events.on(\"sleep\", this.onSleep, this);\r\n        this.events.on(\"wake\", this.onWake, this);\r\n    }\r\n\r\n    private startStarScenes()\r\n    {\r\n        this.scene.add(\"spaceStar\", SpaceStarScene, true,\r\n        {\r\n            starsPerCell: 100,\r\n            starSize: 3,\r\n            starScroll: 1\r\n        });\r\n        this.scene.sendToBack(\"spaceStar\");\r\n\r\n        this.scene.add(\"spaceStar2\", SpaceStarScene, true,\r\n        {\r\n            starsPerCell: 124,\r\n            starSize: 2,\r\n            starScroll: 0.73\r\n        });\r\n        this.scene.sendToBack(\"spaceStar2\");\r\n\r\n        this.scene.add(\"spaceStar3\", SpaceStarScene, true,\r\n        {\r\n            starsPerCell: 250,\r\n            starSize: 1,\r\n            starScroll: 0.56\r\n        });\r\n        this.scene.sendToBack(\"spaceStar3\");\r\n\r\n        this.starScenesSleeping = false;\r\n    }\r\n\r\n    private onSleep()\r\n    {\r\n        this.scene.sleep(\"spaceStar\");\r\n        this.scene.sleep(\"spaceStar2\");\r\n        this.scene.sleep(\"spaceStar3\");\r\n\r\n        this.starScenesSleeping = true;\r\n    }\r\n\r\n    private onWake()\r\n    {\r\n        this.scene.wake(\"spaceStar\");\r\n        this.scene.wake(\"spaceStar2\");\r\n        this.scene.wake(\"spaceStar3\");\r\n\r\n        this.starScenesSleeping = false;\r\n    }\r\n\r\n    public update()\r\n    {\r\n        this.updateStarFade();\r\n    }\r\n\r\n    private updateStarFade()\r\n    {\r\n        if(this.starScenesSleeping)\r\n        {\r\n            return;\r\n        }\r\n\r\n        var mainCam = this.scene.get(\"space\").cameras.main;\r\n\r\n        if(mainCam.zoom <= 0.5)\r\n        {\r\n            this.scene.sleep(\"spaceStar3\");\r\n        }\r\n        else\r\n        {\r\n            this.scene.wake(\"spaceStar3\");\r\n        }\r\n\r\n        if(mainCam.zoom <= 0.35)\r\n        {\r\n            this.scene.sleep(\"spaceStar2\");\r\n        }\r\n        else\r\n        {\r\n            this.scene.wake(\"spaceStar2\");\r\n        }\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// @ts-nocheck\r\n\r\n// Entry scene \r\nimport EntryScene from \"./scenes/EntryScene\";\r\n\r\n// Space scenes\r\nimport SpaceScene from \"./scenes/space/SpaceScene\";\r\nimport SpaceCameraControllerScene from \"./scenes/space/SpaceCameraControllerScene\";\r\nimport SpaceDebugScene from \"./scenes/space/SpaceDebugScene\";\r\nimport SpaceUIDebugScene from \"./scenes/space/SpaceUIDebugScene\";\r\nimport StarSceneControllerScene from \"./scenes/space/StarSceneControllerScene\";\r\n\r\n// Planet scene(s)\r\nimport PlanetScene from \"./scenes/planet/PlanetScene\";\r\nimport SpaceLogicScene from \"./scenes/space/SpaceLogicScene\";\r\nimport PlanetLogicScene from \"./scenes/planet/PlanetLogicScene\";\r\nimport SpaceBackgroundScene from \"./scenes/space/SpaceBackgroundScene\";\r\n\r\n/*\r\n    Started CartesianSystem: 2/19/2021\r\n\r\n    Note: When I finish this I need to properly release it meaning: \r\n    Do this checklist:\r\n    1. Final check for bugs\r\n    2. Final playtest\r\n    3. Build in production mode\r\n    4. Move ./dist/PlanetSearch3.min.js to ./www/js\r\n    5. Make sure I can play this only with resources from the www folder\r\n    6. Properly copyright this game\r\n*/\r\n\r\nlet config = {\r\n    type: Phaser.WEBGL,\r\n    width: 800,\r\n    height: 450,\r\n    pixelArt: true,\r\n    scale: {\r\n        mode: Phaser.Scale.FIT,\r\n        autoCenter: Phaser.Scale.CENTER_BOTH,\r\n    },\r\n    disableContextMenu: true,\r\n    scene: [\r\n        // Entry scene \r\n        EntryScene,\r\n\r\n        // Space scenes\r\n        SpaceBackgroundScene, SpaceScene, SpaceCameraControllerScene, SpaceDebugScene, \r\n        SpaceUIDebugScene, StarSceneControllerScene, SpaceLogicScene, \r\n\r\n        // Planet scene(s)\r\n        PlanetScene, PlanetLogicScene\r\n    ],\r\n}\r\n\r\nvar game: Phaser.Game = new Phaser.Game(config);\r\n\r\nwindow.game = game;\r\n"],"sourceRoot":""}