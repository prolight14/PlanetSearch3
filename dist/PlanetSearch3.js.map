{"version":3,"sources":["webpack://planetsearch3/./src/gameObjects/space/PlayerShip.ts","webpack://planetsearch3/./src/gameObjects/space/SpaceGameObject.ts","webpack://planetsearch3/./src/scenes/space/SpaceCameraControllerScene.ts","webpack://planetsearch3/./src/scenes/space/SpaceDebugScene.ts","webpack://planetsearch3/./src/scenes/space/SpaceScene.ts","webpack://planetsearch3/./src/scenes/space/SpaceStarScene.ts","webpack://planetsearch3/./src/scenes/space/SpaceUIDebugScene.ts","webpack://planetsearch3/webpack/bootstrap","webpack://planetsearch3/./src/index.ts"],"names":[],"mappings":"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","file":"./PlanetSearch3.js","sourcesContent":["import SpaceScene from \"../../scenes/space/SpaceScene\";\r\nimport SpaceGameObject from \"./SpaceGameObject\";\r\n\r\nexport default class PlayerShip extends SpaceGameObject\r\n{\r\n    constructor (scene: SpaceScene, x: number, y: number, texture: string)\r\n    {\r\n        super(scene, x, y, texture);\r\n\r\n        this.keys = {\r\n            a: scene.input.keyboard.addKey('a'), \r\n            d: scene.input.keyboard.addKey('d'),\r\n            w: scene.input.keyboard.addKey('w'),\r\n            s: scene.input.keyboard.addKey('s')\r\n        };\r\n\r\n        this.controls = {\r\n            turnLeft: () =>\r\n            {\r\n                return this.keys.a.isDown;\r\n            },\r\n            turnRight: () =>\r\n            {\r\n                return this.keys.d.isDown;\r\n            },\r\n            goForward: () =>\r\n            {\r\n                return this.keys.w.isDown;\r\n            }            \r\n        };\r\n\r\n        this.setScale(2, 2);\r\n        this.angleVel = 3;\r\n        this.speed = 6;\r\n    }\r\n\r\n    angleVel: number;\r\n    speed: number;\r\n\r\n    keys: any;\r\n    controls: any;\r\n\r\n    public preUpdate()\r\n    {\r\n        if(this.controls.turnLeft())\r\n        {\r\n            this.setAngle(this.angle - this.angleVel);\r\n        }     \r\n        if(this.controls.turnRight())\r\n        {\r\n            this.setAngle(this.angle + this.angleVel);\r\n        }\r\n\r\n        if(this.controls.goForward())\r\n        {\r\n            let angle = Phaser.Math.DEG_TO_RAD * (this.angle - 90);\r\n            this.x += Math.cos(angle) * this.speed;\r\n            this.y += Math.sin(angle) * this.speed;\r\n        }\r\n\r\n        this.bodyConf.update();\r\n    }\r\n}","export default class SpaceGameObject extends Phaser.GameObjects.Sprite\r\n{\r\n    constructor (scene: Phaser.Scene, x: number, y: number, texture: string, frame?: string | number)\r\n    {\r\n        super(scene, x, y, texture, frame);\r\n\r\n        scene.add.existing(this);\r\n\r\n        let _this: this = this;\r\n\r\n        this.bodyConf = {\r\n            moves: true,\r\n            boundingBox: {},\r\n            update: function() {},\r\n            destroy: function() {}\r\n        };\r\n        this.bodyConf.updateBoundingBox = function()\r\n        {\r\n            this.boundingBox.minX = _this.x - _this.displayWidth / 2;\r\n            this.boundingBox.minY = _this.y - _this.displayHeight / 2;\r\n            this.boundingBox.maxX = _this.x + _this.displayWidth / 2;\r\n            this.boundingBox.maxY = _this.y + _this.displayHeight / 2;\r\n        };\r\n\r\n        this.bodyConf.updateBoundingBox();\r\n    }\r\n\r\n    body: any;\r\n    bodyConf: any;\r\n}","import SpaceScene from \"./SpaceScene\";\r\nimport SpaceDebugScene from \"./SpaceDebugScene\";\r\nimport SpaceStarScene from \"./SpaceStarScene\";\r\n\r\nexport default class SpaceCameraControllerScene extends Phaser.Scene\r\n{\r\n    constructor()\r\n    {\r\n        super(\"spaceCameraController\");\r\n    }\r\n\r\n    private spaceScene: SpaceScene;\r\n    private spaceDebugScene: SpaceDebugScene;\r\n    private keys: {\r\n        rotateLeft: Phaser.Input.Keyboard.Key,\r\n        rotateRight: Phaser.Input.Keyboard.Key,\r\n        rotateReset: Phaser.Input.Keyboard.Key\r\n    };\r\n    private camAngle: number;\r\n    private angleSpeed: number;\r\n    private spaceStarScene: SpaceStarScene;\r\n\r\n    public create()\r\n    {\r\n        this.spaceScene = this.scene.get(\"space\") as SpaceScene;\r\n        this.spaceDebugScene = this.scene.get(\"spaceDebug\") as SpaceDebugScene;\r\n        this.spaceStarScene = this.scene.get(\"spaceStar\") as SpaceStarScene;\r\n\r\n        this.input.on('wheel', (pointer: Phaser.Input.Pointer, currentlyOver: any, dx: number, dy: number, dz: number) =>\r\n        { \r\n            var cam = this.cameras.main;\r\n\r\n            this.updateZoom(Math.min(Math.max(cam.zoom - dy * 0.001, 0.3), 1.5));\r\n        });\r\n\r\n        this.keys = {\r\n            rotateLeft: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT),\r\n            rotateRight: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT),\r\n            rotateReset: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ZERO)\r\n        };\r\n\r\n        this.camAngle = 0;\r\n        this.angleSpeed = 2;\r\n    }\r\n\r\n    public updateZoom(zoom: number)\r\n    {\r\n        var cam = this.cameras.main;\r\n\r\n        cam.setZoom(zoom);\r\n\r\n        this.spaceScene.cameras.main.setZoom(cam.zoom);\r\n        this.spaceDebugScene.cameras.main.setZoom(cam.zoom);\r\n        this.spaceStarScene.cameras.main.setZoom(cam.zoom);\r\n\r\n        this.resizeCSPCameraWindow();\r\n    }\r\n\r\n    public update ()\r\n    {\r\n        var spaceCam = this.scene.get(\"space\").cameras.main;\r\n\r\n        this.spaceDebugScene.cameras.main.setScroll(spaceCam.scrollX, spaceCam.scrollY);\r\n        this.spaceStarScene.cameras.main.setScroll(spaceCam.scrollX, spaceCam.scrollY);\r\n\r\n        if(this.keys.rotateLeft.isDown)\r\n        {\r\n            this.camAngle -= this.angleSpeed;\r\n            this.adjustCameraAngle(this.camAngle);\r\n        }\r\n        if(this.keys.rotateRight.isDown)\r\n        {\r\n            this.camAngle += this.angleSpeed;\r\n            this.adjustCameraAngle(this.camAngle);\r\n        }\r\n        if(this.keys.rotateReset.isDown)\r\n        {\r\n            this.camAngle = 0;\r\n            this.adjustCameraAngle(this.camAngle);\r\n\r\n            this.updateZoom(1);\r\n        }\r\n    }\r\n\r\n    private adjustCameraAngle(angle: number)\r\n    {\r\n        this.cameras.main.setAngle(angle);\r\n\r\n        this.spaceScene.cameras.main.setAngle(angle);\r\n        this.spaceDebugScene.cameras.main.setAngle(angle);\r\n        this.spaceStarScene.cameras.main.setAngle(angle);\r\n    }\r\n\r\n    private resizeCSPCameraWindow ()\r\n    {\r\n        var world: any = this.spaceScene.csp.world;\r\n        var cspConfig = this.spaceScene.cspConfig;\r\n        var cam = this.cameras.main;\r\n        \r\n        var prev_x: number = cspConfig.window.x;\r\n        var prev_y: number = cspConfig.window.y;\r\n        var prev_width: number = cspConfig.window.width;\r\n        var prev_height: number = cspConfig.window.height;\r\n        var prev_halfWidth = prev_width / 2;\r\n        var prev_halfHeight = prev_height / 2;\r\n\r\n        let reuseHyp = Math.sqrt(Math.pow(prev_halfWidth, 2) + Math.pow(prev_halfHeight, 2));\r\n        let startingAngle = Math.atan2(prev_halfHeight, prev_halfWidth) + this.camAngle * Phaser.Math.DEG_TO_RAD;\r\n\r\n        let upperLeft: any = {};\r\n        let lowerLeft: any = {};\r\n        let upperRight: any = {};\r\n        let lowerRight: any = {};\r\n\r\n        upperLeft.angle = startingAngle + Math.PI * 1.5;\r\n        upperLeft.x = Math.cos(upperLeft.angle) * reuseHyp;\r\n        upperLeft.y = Math.sin(upperLeft.angle) * reuseHyp;\r\n\r\n        lowerLeft.angle = startingAngle + Math.PI;\r\n        lowerLeft.x = Math.cos(lowerLeft.angle) * reuseHyp;\r\n        lowerLeft.y = Math.sin(lowerLeft.angle) * reuseHyp;\r\n\r\n        upperRight.angle = startingAngle;\r\n        upperRight.x = Math.cos(upperRight.angle) * reuseHyp;\r\n        upperRight.y = Math.sin(upperRight.angle) * reuseHyp;\r\n\r\n        lowerRight.angle = startingAngle + Math.PI / 2;\r\n        lowerRight.x = Math.cos(lowerRight.angle) * reuseHyp;\r\n        lowerRight.y = Math.sin(lowerRight.angle) * reuseHyp;\r\n\r\n        var minX = Math.min(upperLeft.x, lowerLeft.x, upperRight.x, lowerRight.x);\r\n        var maxX = Math.max(upperLeft.x, lowerLeft.x, upperRight.x, lowerRight.x);\r\n        var minY = Math.min(upperLeft.y, lowerLeft.y, upperRight.y, lowerRight.y);\r\n        var maxY = Math.max(upperLeft.y, lowerLeft.y, upperRight.y, lowerRight.y);\r\n\r\n        var x = minX;\r\n        var y = minY;\r\n        var width = maxX - minX;\r\n        var height = maxY - minY;\r\n\r\n        // hyp = ((opp + adj) / 2) * Math.sqrt(2)\r\n        var derivedWidth: number = width * Math.SQRT2 / cam.zoom;\r\n        var derivedHeight: number = height * Math.SQRT2 / cam.zoom;\r\n\r\n        world.camera.setWindow(\r\n            x - (derivedWidth - width) / 2, \r\n            y - (derivedHeight - height) / 2, \r\n            derivedWidth,\r\n            derivedHeight\r\n        );\r\n\r\n        this.spaceStarScene.setCSPCameraWindow(\r\n            world.camera.x, world.camera.y, world.camera.width, world.camera.height\r\n        );\r\n    }\r\n}","import SpaceScene from \"./SpaceScene\";\r\n\r\nexport default class SpaceDebugScene extends Phaser.Scene\r\n{\r\n    constructor()\r\n    {\r\n        super(\"spaceDebug\");\r\n    }\r\n\r\n    private cellGraphics: Phaser.GameObjects.Graphics; \r\n\r\n    public create()\r\n    {\r\n        this.cellGraphics = this.add.graphics();\r\n    }\r\n\r\n    public update(time: number, delta: number)\r\n    {\r\n        this.showGrid();\r\n    }\r\n\r\n    private showGrid()\r\n    {\r\n        var spaceScene: SpaceScene = this.scene.get(\"space\") as SpaceScene;\r\n\r\n        this.cellGraphics.clear();\r\n\r\n        this.cellGraphics.lineStyle(2, 0x549431, 1.0);\r\n        let cellWidth: number = spaceScene.csp.world.cameraGrid.cellWidth;\r\n        let cellHeight: number = spaceScene.csp.world.cameraGrid.cellHeight;\r\n\r\n        spaceScene.csp.world.loopThroughVisibleCells((cell: object, col: number, row: number) =>\r\n        {\r\n            this.cellGraphics.strokeRect(col * cellWidth, row * cellHeight, cellWidth, cellHeight);\r\n        });\r\n    }\r\n}","import PlayerShip from \"../../gameObjects/space/PlayerShip\";\r\n\r\nexport default class SpaceScene extends Phaser.Scene\r\n{\r\n    constructor()\r\n    {\r\n        super(\"space\");\r\n    }\r\n\r\n    public preload()\r\n    {\r\n        this.load.image(\"playerShip\", \"./assets/playership.png\");\r\n\r\n        this.load.scenePlugin({\r\n            key: \"CartesianSystemPlugin\",\r\n            url: \"./libraries/CartesianSystemPlugin.js\",\r\n            sceneKey: 'csp'\r\n        });\r\n    }\r\n\r\n    public cspConfig: any;\r\n\r\n    public create()\r\n    {\r\n        this.cspConfig = {\r\n            window: {\r\n                width: this.game.config.width,\r\n                height: this.game.config.height\r\n            },\r\n            grid: {\r\n                cols: 182,\r\n                rows: 182,\r\n                cellWidth: 800,\r\n                cellHeight: 800\r\n            }\r\n        };\r\n\r\n        this.csp.initWorld(this.cspConfig);\r\n\r\n        this.addGameObjects();\r\n        this.csp.syncWithGrid();\r\n\r\n        this.runScenes();\r\n    }\r\n\r\n    public playerShip: PlayerShip;\r\n\r\n    private addGameObjects()\r\n    {\r\n        this.playerShip = this.csp.world.add.gameObjectArray(PlayerShip).add(this, 69000, 69000, \"playerShip\");\r\n        this.cameras.main.startFollow(this.playerShip);\r\n    }\r\n\r\n    private runScenes()\r\n    {\r\n        this.scene.run(\"spaceCameraController\");\r\n        this.scene.run(\"spaceDebug\");\r\n        this.scene.run(\"spaceUIDebug\");\r\n        this.scene.run(\"spaceStar\");\r\n        this.scene.sendToBack(\"spaceStar\");\r\n    }\r\n\r\n    public csp: any;\r\n\r\n    public update(time: number, delta: number)\r\n    {\r\n        this.csp.setFollow(this.playerShip.x, this.playerShip.y);\r\n        this.csp.updateWorld();\r\n    }\r\n}","import SpaceScene from \"./SpaceScene\";\r\n\r\nexport default class SpaceStarScene extends Phaser.Scene\r\n{\r\n    constructor()\r\n    {\r\n        super(\"spaceStar\");\r\n\r\n        this.starsPerCell = 200;\r\n        this.starSize = 2;\r\n    }\r\n\r\n    private starsPerCell: number;\r\n    private starSize: number;\r\n    private csStars: any;\r\n\r\n    public preload()\r\n    {\r\n        this.load.scenePlugin({\r\n            key: \"CartesianSystemPlugin\",\r\n            url: \"./libraries/CartesianSystemPlugin.js\",\r\n            sceneKey: 'csStars'\r\n        });\r\n    }\r\n\r\n    private stars: Phaser.GameObjects.Graphics;\r\n    private spaceScene: SpaceScene;\r\n    public create()\r\n    {\r\n        this.spaceScene = this.scene.get(\"space\") as SpaceScene;\r\n       \r\n        this.csStars.initWorld(this.spaceScene.cspConfig);\r\n\r\n        this.stars = this.add.graphics();\r\n    }\r\n\r\n    public update()\r\n    {\r\n        // var cam: Phaser.Cameras.Scene2D.Camera = this.cameras.main;\r\n\r\n        this.csStars.setFollow(this.spaceScene.playerShip.x, this.spaceScene.playerShip.y);\r\n        this.csStars.updateWorld();\r\n\r\n        this.sys.displayList.add(this.stars);\r\n        this.renderStars();\r\n    }\r\n\r\n    public renderStars()\r\n    {\r\n        this.stars.clear();\r\n        this.stars.fillStyle(0xFFFFFF);\r\n\r\n        let world: any = this.csStars.world;\r\n\r\n        let rng, i, x, y;\r\n\r\n        let cellWidth: number = world.cameraGrid.cellWidth;\r\n        let cellHeight: number = world.cameraGrid.cellHeight;\r\n\r\n        world.loopThroughVisibleCells((cell: object, col: number, row: number) =>\r\n        {\r\n            rng = new Phaser.Math.RandomDataGenerator([(col + row).toString()]);\r\n\r\n            x = col * cellWidth;\r\n            y = row * cellHeight;\r\n\r\n            for(i = 0; i < this.starsPerCell; i++)\r\n            {\r\n                this.stars.fillRect(x + rng.between(0, cellWidth), y + rng.between(0, cellHeight), this.starSize, this.starSize);\r\n            }\r\n        });\r\n    }\r\n\r\n    public setCSPCameraWindow(x: number, y: number, width: number, height: number)\r\n    {\r\n        this.csStars.world.camera.setWindow(\r\n            x, y, width, height\r\n        );\r\n    }\r\n}","import SpaceScene from \"./SpaceScene\";\r\nimport PlayerShip from \"../../gameObjects/space/PlayerShip\";\r\nimport SpaceCameraControllerScene from \"./SpaceCameraControllerScene\";\r\n\r\nexport default class SpaceUIDebugScene extends Phaser.Scene\r\n{\r\n    constructor()\r\n    {\r\n        super(\"spaceUIDebug\");\r\n    }\r\n\r\n    private cellCoorText: Phaser.GameObjects.Text;\r\n    private cellText: Phaser.GameObjects.Text;\r\n    private fpsText: Phaser.GameObjects.Text;\r\n    private shipPositionText: Phaser.GameObjects.Text;\r\n    private spaceScene: SpaceScene;\r\n\r\n    public create()\r\n    {\r\n        this.cellCoorText = this.add.text(40, 260, \"\");\r\n        this.cellText = this.add.text(40, 274, \"\");\r\n        this.fpsText = this.add.text(40, 20, \"\");\r\n        this.shipPositionText = this.add.text(550, 20, \"\");\r\n\r\n        this.spaceScene = this.scene.get(\"space\") as SpaceScene;\r\n    }\r\n\r\n    public update(time: number, delta: number)\r\n    {\r\n        this.fpsText.setText(\"Fps: \" + (1000 / delta).toFixed(0));\r\n        var playerShip: PlayerShip = this.spaceScene.playerShip;\r\n        this.shipPositionText.setText(`(${playerShip.x.toFixed(2)}, ${playerShip.y.toFixed(2)})`);\r\n\r\n        this.peekCell();\r\n    }\r\n\r\n    private peekCell()\r\n    {\r\n        var cspWorld: any = this.spaceScene.csp.world;\r\n\r\n        var coordinates: { col: number, row: number } = cspWorld.cameraGrid.getCoordinates(\r\n            cspWorld.camera.scrollX - cspWorld.camera.halfWidth + this.input.activePointer.x, \r\n            cspWorld.camera.scrollY - cspWorld.camera.halfHeight + this.input.activePointer.y\r\n        );\r\n\r\n        var cell: any = cspWorld.cameraGrid.grid[coordinates.col][coordinates.row];\r\n\r\n        this.cellCoorText.setText(`(${coordinates.col}, ${coordinates.row})`);\r\n\r\n        var txt: string = \"\";\r\n        for(var i in cell)\r\n        {\r\n            txt += i;\r\n        }\r\n\r\n        this.cellText.setText(txt);\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// @ts-nocheck\r\nimport SpaceScene from \"./scenes/space/SpaceScene\";\r\nimport SpaceCameraControllerScene from \"./scenes/space/SpaceCameraControllerScene\";\r\nimport SpaceDebugScene from \"./scenes/space/SpaceDebugScene\";\r\nimport SpaceUIDebugScene from \"./scenes/space/SpaceUIDebugScene\";\r\nimport SpaceStarScene from \"./scenes/space/SpaceStarScene\";\r\n/*\r\n    Started CartesianSystem: 2/19/2021\r\n*/\r\n\r\nlet config = {\r\n    type: Phaser.CANVAS,\r\n    width: 800,\r\n    height: 450,\r\n    pixelArt: true,\r\n    scale: {\r\n        mode: Phaser.Scale.FIT,\r\n        autoCenter: Phaser.Scale.CENTER_BOTH,\r\n    },\r\n    scene: [SpaceScene, SpaceCameraControllerScene, SpaceStarScene, SpaceDebugScene, SpaceUIDebugScene],\r\n}\r\n\r\nvar game: Phaser.Game = new Phaser.Game(config);\r\n\r\nwindow.game = game;\r\n\r\n\r\n"],"sourceRoot":""}