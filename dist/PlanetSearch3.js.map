{"version":3,"sources":["webpack://planetsearch3/./src/gameObjects/space/PlayerShip.ts","webpack://planetsearch3/./src/gameObjects/space/SpaceGameObject.ts","webpack://planetsearch3/./src/scenes/space/SpaceDebugScene.ts","webpack://planetsearch3/./src/scenes/space/SpaceScene.ts","webpack://planetsearch3/./src/scenes/space/SpaceStarScene.ts","webpack://planetsearch3/webpack/bootstrap","webpack://planetsearch3/./src/index.ts"],"names":[],"mappings":"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","file":"./PlanetSearch3.js","sourcesContent":["import SpaceScene from \"../../scenes/space/SpaceScene\";\r\nimport SpaceGameObject from \"./SpaceGameObject\";\r\n\r\nexport default class PlayerShip extends SpaceGameObject\r\n{\r\n    constructor (scene: SpaceScene, x: number, y: number, texture: string)\r\n    {\r\n        super(scene, x, y, texture);\r\n\r\n        this.keys = {\r\n            a: scene.input.keyboard.addKey('a'), \r\n            d: scene.input.keyboard.addKey('d'),\r\n            w: scene.input.keyboard.addKey('w'),\r\n            s: scene.input.keyboard.addKey('s')\r\n        };\r\n\r\n        this.controls = {\r\n            turnLeft: () =>\r\n            {\r\n                return this.keys.a.isDown;\r\n            },\r\n            turnRight: () =>\r\n            {\r\n                return this.keys.d.isDown;\r\n            },\r\n            goForward: () =>\r\n            {\r\n                return this.keys.w.isDown;\r\n            }            \r\n        };\r\n\r\n        this.setScale(2, 2);\r\n        this.angleVel = 3;\r\n        this.speed = 6;\r\n    }\r\n\r\n    angleVel: number;\r\n    speed: number;\r\n\r\n    keys: any;\r\n    controls: any;\r\n\r\n    public preUpdate()\r\n    {\r\n        if(this.controls.turnLeft())\r\n        {\r\n            this.setAngle(this.angle - this.angleVel);\r\n        }     \r\n        if(this.controls.turnRight())\r\n        {\r\n            this.setAngle(this.angle + this.angleVel);\r\n        }\r\n\r\n        if(this.controls.goForward())\r\n        {\r\n            let angle = Phaser.Math.DEG_TO_RAD * (this.angle - 90);\r\n            this.x += Math.cos(angle) * this.speed;\r\n            this.y += Math.sin(angle) * this.speed;\r\n        }\r\n\r\n        this.bodyConf.update();\r\n    }\r\n}","export default class SpaceGameObject extends Phaser.GameObjects.Sprite\r\n{\r\n    constructor (scene: Phaser.Scene, x: number, y: number, texture: string, frame?: string | number)\r\n    {\r\n        super(scene, x, y, texture, frame);\r\n\r\n        scene.add.existing(this);\r\n\r\n        let _this: this = this;\r\n\r\n        this.bodyConf = {\r\n            moves: true,\r\n            boundingBox: {},\r\n            update: function() {},\r\n            destroy: function() {}\r\n        };\r\n        this.bodyConf.updateBoundingBox = function()\r\n        {\r\n            this.boundingBox.minX = _this.x - _this.displayWidth / 2;\r\n            this.boundingBox.minY = _this.y - _this.displayHeight / 2;\r\n            this.boundingBox.maxX = _this.x + _this.displayWidth / 2;\r\n            this.boundingBox.maxY = _this.y + _this.displayHeight / 2;\r\n        };\r\n\r\n        this.bodyConf.updateBoundingBox();\r\n    }\r\n\r\n    body: any;\r\n    bodyConf: any;\r\n}","import SpaceScene from \"./SpaceScene\";\r\nimport PlayerShip from \"../../gameObjects/space/PlayerShip\";\r\n\r\nexport default class SpaceDebugScene extends Phaser.Scene\r\n{\r\n    constructor()\r\n    {\r\n        super(\"spaceDebug\");\r\n    }\r\n\r\n    private cellGraphics: Phaser.GameObjects.Graphics; \r\n    private spaceCamera: Phaser.Cameras.Scene2D.Camera; \r\n    private spaceScene: SpaceScene;\r\n    private cellCoorText: Phaser.GameObjects.Text;\r\n    private cellText: Phaser.GameObjects.Text;\r\n    private fpsText: Phaser.GameObjects.Text;\r\n    private shipPositionText: Phaser.GameObjects.Text;\r\n\r\n    public create()\r\n    {\r\n        this.cellGraphics = this.add.graphics();\r\n        this.cellCoorText = this.add.text(40, 260, \"\").setScrollFactor(0);\r\n        this.cellText = this.add.text(40, 274, \"\").setScrollFactor(0);\r\n        this.fpsText = this.add.text(40, 20, \"\").setScrollFactor(0);\r\n        this.shipPositionText = this.add.text(550, 20, \"\").setScrollFactor(0);\r\n\r\n        this.spaceScene = this.scene.get(\"space\") as SpaceScene;\r\n        this.spaceCamera = this.scene.get(\"space\").cameras.main;\r\n    }\r\n\r\n    public update(time: number, delta: number)\r\n    {\r\n        this.fpsText.setText(\"Fps: \" + (1000 / delta).toFixed(0));\r\n        var playerShip: PlayerShip = this.spaceScene.playerShip;\r\n        this.shipPositionText.setText(`(${playerShip.x.toFixed(2)}, ${playerShip.y.toFixed(2)})`);\r\n\r\n        this.cameras.main.setScroll(this.spaceCamera.scrollX, this.spaceCamera.scrollY);\r\n\r\n        this.showGrid();\r\n        this.peekCell();\r\n    }\r\n\r\n    private showGrid()\r\n    {\r\n        let spaceScene: SpaceScene = this.scene.get(\"space\") as SpaceScene;\r\n\r\n        this.cellGraphics.clear();\r\n\r\n        this.cellGraphics.lineStyle(2, 0x549431, 1.0);\r\n        let cellWidth: number = spaceScene.csp.world.cameraGrid.cellWidth;\r\n        let cellHeight: number = spaceScene.csp.world.cameraGrid.cellHeight;\r\n\r\n        spaceScene.csp.world.loopThroughVisibleCells((cell: object, col: number, row: number) =>\r\n        {\r\n            this.cellGraphics.strokeRect(col * cellWidth, row * cellHeight, cellWidth, cellHeight);\r\n        });\r\n    }\r\n\r\n    private peekCell()\r\n    {\r\n        var cspWorld: any = this.spaceScene.csp.world;\r\n\r\n        var coordinates: { col: number, row: number } = cspWorld.cameraGrid.getCoordinates(\r\n            cspWorld.camera.scrollX - cspWorld.camera.halfWidth + this.input.activePointer.x, \r\n            cspWorld.camera.scrollY - cspWorld.camera.halfHeight + this.input.activePointer.y\r\n        );\r\n\r\n        var cell: any = cspWorld.cameraGrid.grid[coordinates.col][coordinates.row];\r\n\r\n        this.cellCoorText.setText(`(${coordinates.col}, ${coordinates.row})`);\r\n\r\n        var txt: string = \"\";\r\n        for(var i in cell)\r\n        {\r\n            txt += i;\r\n        }\r\n\r\n        this.cellText.setText(txt);\r\n    }\r\n}","import PlayerShip from \"../../gameObjects/space/PlayerShip\";\r\n\r\nexport default class SpaceScene extends Phaser.Scene\r\n{\r\n    private cspConfig: any;\r\n\r\n    constructor()\r\n    {\r\n        super(\"space\");\r\n    }\r\n\r\n    public preload()\r\n    {\r\n        this.load.image(\"playerShip\", \"./assets/playership.png\");\r\n\r\n        this.load.scenePlugin({\r\n            key: \"CartesianSystemPlugin\",\r\n            url: \"./libraries/CartesianSystemPlugin.js\",\r\n            sceneKey: 'csp'\r\n        });\r\n    }\r\n\r\n    public playerShip: PlayerShip;\r\n\r\n    public create()\r\n    {\r\n        this.cspConfig = {\r\n            window: {\r\n                width: this.game.config.width,\r\n                height: this.game.config.height\r\n            },\r\n            grid: {\r\n                cols: 345,\r\n                rows: 345,\r\n                cellWidth: 400,\r\n                cellHeight: 400\r\n            }\r\n        };\r\n\r\n        this.csp.initWorld(this.cspConfig);\r\n\r\n        this.playerShip = this.csp.world.add.gameObjectArray(PlayerShip).add(this, 69000, 69000, \"playerShip\");\r\n\r\n        this.csp.syncWithGrid();\r\n\r\n        this.cameras.main.startFollow(this.playerShip);\r\n\r\n        this.runScenes();\r\n    }\r\n\r\n    private runScenes()\r\n    {\r\n        this.scene.run(\"spaceDebug\");\r\n    }\r\n\r\n    fpsText: Phaser.GameObjects.Text;\r\n    csp: any;\r\n\r\n    public update(time: number, delta: number)\r\n    {\r\n        this.csp.setFollow(this.playerShip.x, this.playerShip.y);\r\n        this.csp.updateWorld();\r\n    }\r\n}","export default class SpaceStarScene extends Phaser.Scene\r\n{\r\n    constructor()\r\n    {\r\n        super(\"spaceStar\");\r\n    }\r\n\r\n    public create()\r\n    {\r\n        console.log(\"Created Star Scene\");\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// @ts-nocheck\r\nimport SpaceScene from \"./scenes/space/SpaceScene\";\r\nimport SpaceStarScene from \"./scenes/space/SpaceStarScene\";\r\nimport SpaceDebugScene from \"./scenes/space/SpaceDebugScene\";\r\n\r\n/*\r\n    Started CartesianSystem: 2/19/2021\r\n*/\r\n\r\nlet config = {\r\n    type: Phaser.AUTO,\r\n    width: 800,\r\n    height: 450,\r\n    pixelArt: true,\r\n    scale: {\r\n        mode: Phaser.Scale.FIT,\r\n        autoCenter: Phaser.Scale.CENTER_BOTH,\r\n    },\r\n    scene: [SpaceScene, SpaceStarScene, SpaceDebugScene],\r\n}\r\n\r\nvar game: Phaser.Game = new Phaser.Game(config);\r\n\r\nwindow.game = game;"],"sourceRoot":""}